#I did not create this code and was generated by PFAM, this code is present to demonstrate how sequences were retreived from PFAM
#I chose fasta as it if this script is run in bash it the outfile of bash will return basically a perfect fasta file\
#for some reason the Python script of PFAM was not running

#!/usr/bin/env perl

use strict;
use warnings;
use LWP::UserAgent;
use JSON qw( encode_json decode_json );
use Data::Dumper;

# Switching off SSL verification
$ENV{'PERL_LWP_SSL_VERIFY_HOSTNAME'} = 0;

my $BASE_URL = "https://www.ebi.ac.uk:443/interpro/api/protein/UniProt/entry/pfam/PF03600/?page_size=200&extra_fields=sequence";

  my $HEADER_SEPARATOR = "|";
  my $LINE_LENGTH = 80;

sub main {
  my $agent = LWP::UserAgent->new();

  my $next = $BASE_URL;
  my $last_page = 0;
  
  while ($next) {
    my $req = HTTP::Request->new(
      GET => $next,
      HTTP::Headers->new("Accept" => "application/json"),
      ssl_opts =>  {
        SSL_verify_mode => 0
      }
    );
    my $res = $agent->request($req);
    if ($res->code == 408) {
      #wait just over a minute
      sleep(61);
      # then continue this loop with the same URL
      next;
    } elsif ($res->code == 204) {
      #no data matching query
      last;
    }
    my $payload = decode_json($res->content);
    $next = $payload->{"next"};
    unless (defined $next){
      $last_page = 1;
    }
    my $results = $payload->{"results"};
    for (my $i=0; $i < (@{$results}); $i++) {
      my $item = $results->[$i];
      
      my $entries;
      if (defined $item->{"entries"}){
        $entries=$item->{"entries"};
      }
      if ($entries){
        print ">$item->{metadata}->{accession}$HEADER_SEPARATOR";
        my $DASH="";
        foreach my $entry (@{$entries}) {
          print "$DASH$entry->{accession}(";
          my $SEMICOLON = "";
          foreach my $locations  (@{$entry->{"entry_protein_locations"}}) {
            print "$SEMICOLON";
            my $COMMA = "";
            foreach my $fragment (@{$locations->{"fragments"}}) {
              my $start = $fragment->{"start"};
              my $end = $fragment->{"end"};
              print "$COMMA$start...$end";
              $COMMA=",";
            }
            $SEMICOLON = ";";            
          }
          $DASH="-";
          print ")";
        }
        print "$HEADER_SEPARATOR$item->{metadata}->{name}\n";

      } else {
        print ">$item->{metadata}->{accession}$HEADER_SEPARATOR$item->{metadata}->{name}\n";
      }
      my $seq =  $item->{"extra_fields"}{"sequence"};
      foreach my $fastaSeqFragment (unpack("(A$LINE_LENGTH)*", $seq)) {
        print "$fastaSeqFragment\n";
      }
      
    }
    if ($next) {
      sleep(1);
    }
  }
  
}

main();

